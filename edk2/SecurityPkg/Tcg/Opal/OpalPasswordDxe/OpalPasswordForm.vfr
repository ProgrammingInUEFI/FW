/** @file

Copyright (c) 2016, Intel Corporation. All rights reserved.<BR>
This program and the accompanying materials
are licensed and made available under the terms and conditions of the BSD License
which accompanies this distribution.  The full text of the license may be found at
http://opensource.org/licenses/bsd-license.php

THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.

**/
#include "OpalHiiFormValues.h"


#define EFI_HII_PLATFORM_SETUP_FORMSET_GUID \
  { 0x93039971, 0x8545, 0x4b04, { 0xb4, 0x5e, 0x32, 0xeb, 0x83, 0x26, 0x4, 0xe } }

formset
  guid      = SETUP_FORMSET_GUID,
  title     = STRING_TOKEN(STR_OPAL),
  help      = STRING_TOKEN(STR_FORM_SET_HELP),
  classguid = EFI_HII_PLATFORM_SETUP_FORMSET_GUID,

  // Define a Buffer Storage (EFI_IFR_VARSTORE) that will be filled
  // out initially through extractConfig call
  varstore OPAL_HII_CONFIGURATION,           // This is the Data structure type
    name  = OpalHiiConfig,                   // Define referenced name in vfr
    guid  = SETUP_VARIABLE_GUID;         // GUID of this Buffer storage

form formid = FORMID_VALUE_MAIN_MENU,
    title  = STRING_TOKEN(STR_OPAL);

    //CONFIG_VARIABLE(HII_KEY(HII_KEY_ID_VAR_SUPPORTED_DISKS), SupportedDisks, 0x0, 0xFFFF);
    suppressif TRUE;
        numeric
            name    = SupportedDisks,
            varid   = OpalHiiConfig.SupportedDisks,
            prompt  = STRING_TOKEN(STR_NULL),
            help    = STRING_TOKEN(STR_NULL),
            flags   = INTERACTIVE,
            key     = 0x800E,   //32782,
            minimum = 0x0,
            maximum = 0xFFFF,
    endnumeric;
    endif;

    subtitle text = STRING_TOKEN(STR_MAIN_OPAL_VERSION);

    subtitle text = STRING_TOKEN(STR_NULL);

    text
        help   = STRING_TOKEN(STR_NULL),
        text   = STRING_TOKEN(STR_MAIN_PHY_DISKS_LBL);

    subtitle text = STRING_TOKEN(STR_NULL);

    //DISK( 0 );
    suppressif ( questionref(SupportedDisks) & ( 0x1 ) ) == 0;
        goto FORMID_VALUE_DISK_INFO_FORM_MAIN,
            prompt  = STRING_TOKEN(STR_MAIN_GOTO_DISK_INFO_0 ),
            help    = STRING_TOKEN(STR_MAIN_GOTO_DISK_INFO_HELP),
            flags   = INTERACTIVE, \
            key     = 0x8001;   //32769
    endif;

    //DISK( 1 );
    suppressif ( questionref(SupportedDisks) & ( 0x2 ) ) == 0;
        goto FORMID_VALUE_DISK_INFO_FORM_MAIN,
            prompt  = STRING_TOKEN(STR_MAIN_GOTO_DISK_INFO_1 ),
            help    = STRING_TOKEN(STR_MAIN_GOTO_DISK_INFO_HELP),
            flags   = INTERACTIVE, \
            key     = 0x8101;   //33025
    endif;

    //DISK( 2 );
    suppressif ( questionref(SupportedDisks) & ( 0x4 ) ) == 0;
        goto FORMID_VALUE_DISK_INFO_FORM_MAIN,
            prompt  = STRING_TOKEN(STR_MAIN_GOTO_DISK_INFO_2 ),
            help    = STRING_TOKEN(STR_MAIN_GOTO_DISK_INFO_HELP),
            flags   = INTERACTIVE, \
            key     = 0x8201;   //33281
    endif;

    //DISK( 3 );
    suppressif ( questionref(SupportedDisks) & ( 0x8 ) ) == 0;
        goto FORMID_VALUE_DISK_INFO_FORM_MAIN,
            prompt  = STRING_TOKEN(STR_MAIN_GOTO_DISK_INFO_3 ),
            help    = STRING_TOKEN(STR_MAIN_GOTO_DISK_INFO_HELP),
            flags   = INTERACTIVE, \
            key     = 0x8301;  // 33537
    endif;

    //DISK( 4 );
    suppressif ( questionref(SupportedDisks) & ( 0x10 ) ) == 0;
        goto FORMID_VALUE_DISK_INFO_FORM_MAIN,
            prompt  = STRING_TOKEN(STR_MAIN_GOTO_DISK_INFO_4 ),
            help    = STRING_TOKEN(STR_MAIN_GOTO_DISK_INFO_HELP),
            flags   = INTERACTIVE, \
            key     = 0x8401;  // 33793
    endif;

    //DISK( 5 );
    suppressif ( questionref(SupportedDisks) & ( 0x20 ) ) == 0;
        goto FORMID_VALUE_DISK_INFO_FORM_MAIN,
            prompt  = STRING_TOKEN(STR_MAIN_GOTO_DISK_INFO_5 ),
            help    = STRING_TOKEN(STR_MAIN_GOTO_DISK_INFO_HELP),
            flags   = INTERACTIVE, \
            key     = 0x8501;   // 34049
    endif;

    //No disks on system
    suppressif ideqval OpalHiiConfig.NumDisks > 0;
        text
            help    = STRING_TOKEN(STR_NULL),
            text    = STRING_TOKEN(STR_MAIN_NO_DISKS_PRESENT_LBL);
    endif;

    subtitle text = STRING_TOKEN(STR_NULL);

    grayoutif TRUE;
      text
          help    = STRING_TOKEN(STR_BLOCKSID_STATUS_HELP),
          text    = STRING_TOKEN(STR_BLOCKSID_STATUS);
      text
          help    = STRING_TOKEN(STR_BLOCKSID_STATUS_HELP),
          text    = STRING_TOKEN(STR_BLOCKSID_STATUS1);
      text
          help    = STRING_TOKEN(STR_BLOCKSID_STATUS_HELP),
          text    = STRING_TOKEN(STR_BLOCKSID_STATUS2);
      text
          help    = STRING_TOKEN(STR_BLOCKSID_STATUS_HELP),
          text    = STRING_TOKEN(STR_BLOCKSID_STATUS3);
      subtitle text = STRING_TOKEN(STR_NULL);
    endif;

    oneof varid   = OpalHiiConfig.EnableBlockSid,
      questionid  = 0x8017, // 32791,
      prompt      = STRING_TOKEN(STR_DISK_INFO_ENABLE_BLOCKSID),
      help        = STRING_TOKEN(STR_DISK_INFO_GOTO_ENABLE_BLOCKSID_HELP),
      flags       = INTERACTIVE,
      option text = STRING_TOKEN(STR_NONE), value = 0, flags = DEFAULT | MANUFACTURING | RESET_REQUIRED;
      option text = STRING_TOKEN(STR_ENABLED), value = 1, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DISABLED), value = 2, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DISK_INFO_ENABLE_BLOCKSID_TRUE), value = 3, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DISK_INFO_ENABLE_BLOCKSID_FALSE), value = 4, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DISK_INFO_DISABLE_BLOCKSID_TRUE), value = 5, flags = RESET_REQUIRED;
      option text = STRING_TOKEN(STR_DISK_INFO_DISABLE_BLOCKSID_FALSE), value = 6, flags = RESET_REQUIRED;
    endoneof;



endform;  // MAIN MENU FORM

//
/////////////////   DISK INFO FORM   /////////////////
//
form formid = FORMID_VALUE_DISK_INFO_FORM_MAIN,
    title  = STRING_TOKEN(STR_OPAL);

    suppressif TRUE;
        numeric
            name    = SelectedDiskAvailableActions,
            varid   = OpalHiiConfig.SelectedDiskAvailableActions,
            prompt  = STRING_TOKEN(STR_NULL),
            help    = STRING_TOKEN(STR_NULL),
            flags   = INTERACTIVE,
            key     = 0x800F,     // 32783
            minimum = 0x0,
            maximum = 0xFFFF,
    endnumeric;
    endif;

    subtitle text = STRING_TOKEN(STR_MAIN_OPAL_VERSION);

    subtitle text = STRING_TOKEN(STR_NULL);

    text
        help   = STRING_TOKEN(STR_NULL),
        text   = STRING_TOKEN(STR_DISK_INFO_SELECTED_DISK_NAME);

    subtitle text = STRING_TOKEN(STR_NULL);

    suppressif ( questionref(SelectedDiskAvailableActions) & HII_ACTION_LOCK ) == 0;
        goto FORMID_VALUE_DISK_ACTION_FORM,
            prompt  = STRING_TOKEN(STR_DISK_INFO_LOCK),
            help    = STRING_TOKEN(STR_DISK_INFO_GOTO_LOCK_HELP),
            flags   = INTERACTIVE,
            key     = 0x8002;    // 32770
    endif;

    suppressif ( questionref(SelectedDiskAvailableActions) & HII_ACTION_UNLOCK ) == 0;
        goto FORMID_VALUE_DISK_ACTION_FORM,
            prompt  = STRING_TOKEN(STR_DISK_INFO_UNLOCK),
            help    = STRING_TOKEN(STR_DISK_INFO_GOTO_UNLOCK_HELP),
            flags   = INTERACTIVE,
            key     = 0x8003; //32771;
    endif;

    suppressif ( questionref(SelectedDiskAvailableActions) & HII_ACTION_SET_ADMIN_PWD ) == 0;
        goto FORMID_VALUE_DISK_ACTION_FORM,
            prompt  = STRING_TOKEN(STR_DISK_INFO_SET_ADMIN_PSWD),
            help    = STRING_TOKEN(STR_DISK_INFO_GOTO_SET_ADMIN_PSWD_HELP),
            flags   = INTERACTIVE,
            key     = 0x8004; //32772;
        endif;

    suppressif ( questionref(SelectedDiskAvailableActions) & HII_ACTION_SET_USER_PWD ) == 0;
        goto FORMID_VALUE_DISK_ACTION_FORM,
            prompt  = STRING_TOKEN(STR_DISK_INFO_SET_USER_PSWD),
            help    = STRING_TOKEN(STR_DISK_INFO_GOTO_SET_USER_PSWD_HELP),
            flags   = INTERACTIVE,
            key     = 0x8005; //32773;
    endif;

    suppressif ( questionref(SelectedDiskAvailableActions) & HII_ACTION_SECURE_ERASE ) == 0;
        goto FORMID_VALUE_DISK_ACTION_FORM,
            prompt  = STRING_TOKEN(STR_DISK_INFO_SECURE_ERASE),
            help    = STRING_TOKEN(STR_DISK_INFO_GOTO_SECURE_ERASE_HELP),
            flags   = INTERACTIVE,
            key     = 0x8006; //32774;
    endif;

    suppressif ( questionref(SelectedDiskAvailableActions) & HII_ACTION_REVERT ) == 0;
        goto FORMID_VALUE_DISK_ACTION_FORM,
            prompt  = STRING_TOKEN(STR_DISK_INFO_REVERT),
            help    = STRING_TOKEN(STR_DISK_INFO_GOTO_PSID_REVERT_HELP),
            flags   = INTERACTIVE,
            key     = 0x8008; //32776;
    endif;

    suppressif ( questionref(SelectedDiskAvailableActions) & HII_ACTION_PSID_REVERT ) == 0;
        goto FORMID_VALUE_DISK_ACTION_FORM,
            prompt  = STRING_TOKEN(STR_DISK_INFO_PSID_REVERT),
            help    = STRING_TOKEN(STR_DISK_INFO_GOTO_PSID_REVERT_HELP),
            flags   = INTERACTIVE,
            key     = 0x8007; //32775;
    endif;

    suppressif ( questionref(SelectedDiskAvailableActions) & HII_ACTION_DISABLE_USER ) == 0;
        goto FORMID_VALUE_DISK_ACTION_FORM,
            prompt  = STRING_TOKEN(STR_DISK_INFO_DISABLE_USER),
            help    = STRING_TOKEN(STR_DISK_INFO_GOTO_DISABLE_USER_HELP),
            flags   = INTERACTIVE,
            key     = 0x8009; //32777;
    endif;

    suppressif ( questionref(SelectedDiskAvailableActions) & HII_ACTION_ENABLE_FEATURE ) == 0;
        goto FORMID_VALUE_DISK_ACTION_FORM,
            prompt  = STRING_TOKEN(STR_DISK_INFO_ENABLE_FEATURE),
            help    = STRING_TOKEN(STR_DISK_INFO_GOTO_ENABLE_FEATURE_HELP),
            flags   = INTERACTIVE,
            key     = 0x800A; //32778;
    endif;

endform;  // DISK INFO FORM

//
/////////////////   DISK ACTION FORM   /////////////////
//
form formid = FORMID_VALUE_DISK_ACTION_FORM,
    title  = STRING_TOKEN(STR_OPAL);

    suppressif TRUE;
        numeric
            name    = AvailableFields,
            varid   = OpalHiiConfig.AvailableFields,
            prompt  = STRING_TOKEN(STR_NULL),
            help    = STRING_TOKEN(STR_NULL),
            flags   = INTERACTIVE,
            key     = 0x8012,  //32786,
            minimum = 0x0,
            maximum = 0xFFFF,
    endnumeric;
    endif;

    subtitle text = STRING_TOKEN(STR_MAIN_OPAL_VERSION);

    subtitle text = STRING_TOKEN(STR_NULL);

    text
        help   = STRING_TOKEN(STR_NULL),
        text   = STRING_TOKEN(STR_DISK_INFO_SELECTED_DISK_NAME);

    subtitle text = STRING_TOKEN(STR_NULL);

    text
        help   = STRING_TOKEN(STR_NULL),
        text   = STRING_TOKEN(STR_DISK_ACTION_LBL);

    subtitle text = STRING_TOKEN(STR_NULL);

    suppressif (questionref(AvailableFields) & HII_FIELD_KEEP_USER_DATA) == 0;
        grayoutif (questionref(AvailableFields) & HII_FIELD_KEEP_USER_DATA_FORCED) != 0;
            checkbox
                name = MyCheckbox,
                varid = OpalHiiConfig.KeepUserData,
                prompt = STRING_TOKEN(STR_KEEP_USER_DATA_PROMPT),
                help = STRING_TOKEN(STR_KEEP_USER_DATA_HELP),
                key = 0x8011,    //32785,
            endcheckbox;

            //EMPTY_LINE;
            text
                help    = STRING_TOKEN(STR_NULL),
                text    = STRING_TOKEN(STR_NULL);
        endif;
    endif;

    suppressif (questionref(AvailableFields) & HII_FIELD_PASSWORD) == 0;
        password
            varid = OpalHiiConfig.Password,
            prompt = STRING_TOKEN(STR_PASSWORD_PROMPT),
            help = STRING_TOKEN(STR_PASSWORD_HELP),
            flags = INTERACTIVE,
            key = 0x800C,   //32780,
            minsize = 6,
            maxsize = 20,
        endpassword;
    endif;

    suppressif (questionref(AvailableFields) & HII_FIELD_PSID) == 0;
        string
            varid = OpalHiiConfig.Psid,
            prompt = STRING_TOKEN(STR_REVERT_PROMPT),
            help = STRING_TOKEN(STR_REVERT_HELP),
            flags = INTERACTIVE,
            key = 0x800D,   //32781,
            minsize = PSID_CHARACTER_LENGTH,
            maxsize = PSID_CHARACTER_LENGTH,
        endstring;
    endif;

    subtitle text = STRING_TOKEN(STR_NULL);

    text
        help   = STRING_TOKEN(STR_NULL),
        text   = STRING_TOKEN(STR_ACTION_STATUS);

    subtitle text = STRING_TOKEN(STR_NULL);

    goto FORMID_VALUE_MAIN_MENU,
        prompt  = STRING_TOKEN(STR_GOTO_HOME),
        help    = STRING_TOKEN(STR_GOTO_HOME_HELP),
        flags   = INTERACTIVE,
        key     = 0x8000;   //32768;

endform;  // DISK ACTION FORM

endformset;
